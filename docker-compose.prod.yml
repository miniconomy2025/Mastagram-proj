version: '3.8'

networks:
  mastagram-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  mongo_data:
    driver: local
  mongo_config:
    driver: local

services:
  redis:
    image: redis:7-alpine
    container_name: mastagram-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - mastagram-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:7
    container_name: mastagram-mongo
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - mastagram-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mastagram-backend
    restart: unless-stopped
    ports:
      - "5000:3500"
    depends_on:
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
    env_file: 
      - ./backend/.env
    environment:
      - NODE_ENV=production
      - PORT=3500
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://mongo:27017
      - MONGO_DB_NAME=mastagram
    networks:
      - mastagram-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3500/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s